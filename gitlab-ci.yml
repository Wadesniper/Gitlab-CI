variables:
  EAZYLABS_IP: ip10-0-0-3-ch0nmgjl13rgqen6ntj0
  APP_NAME: serigne-staticwebsite
  EAZYLABS_DOMAIN: direct.docker.labs.eazytraining.fr  
  API_PORT: "1993"
  API_ENDPOINT: ${EAZYLABS_IP}-${API_PORT}.${EAZYLABS_DOMAIN}
  INTERNAL_PORT: 80
  STG_EXTERNAL_PORT: 8080
  PROD_EXTERNAL_PORT: 80
  REVIEW_EXTERNAL_PORT: 8000
  TEST_PORT: 90
  CONTAINER_IMAGE: ${IMAGE_NAME}:${CI_COMMIT_REF_NAME}

image: docker:latest
services:
  - name: docker:dind
    alias: docker

stages:
  - Build image
  - Test acceptation
  - Release image
  - Deploy review
  - Stop review
  - Deploy staging
  - Test staging
  - Deploy prod
  - Test prod


docker-build:
  stage: Build image
  script:
    - docker build -t ${APP_NAME} .
    - docker save ${APP_NAME} > ${APP_NAME}.tar
  artifacts:
    paths:
      - "${APP_NAME}.tar"
    when: on_success
    expire_in: 2 days

test acceptation:
  stage: Test acceptation
  script:
    - docker load < ${APP_NAME}.tar
    - docker run -d -p ${TEST_PORT}:${INTERNAL_PORT}  --name webapp ${APP_NAME}
    - apk --no-cache add curl
    - sleep 5
    - curl "http://docker:${TEST_PORT}" | grep -i "Dimension"

release image:
  stage: Release image
  script:
    - docker load < ${APP_NAME}.tar
    - docker tag ${APP_NAME} "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker tag ${APP_NAME} "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "${IMAGE_NAME}:${CI_COMMIT_REF_NAME}"
    - docker push "${IMAGE_NAME}:${CI_COMMIT_SHORT_SHA}"

deploy review:
  stage: Deploy review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://${EAZYLABS_IP}-${REVIEW_EXTERNAL_PORT}.${EAZYLABS_DOMAIN}
    on_stop: stop review
  only: 
    - merge_requests
  script:
    - apk --no-cache add curl
    - 'curl -X POST http://${API_ENDPOINT}/review -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${REVIEW_EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"'
    
stop review:
  stage: Stop review
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only: 
    - merge_requests
  when: manual
  script:
    - apk --no-cache add curl
    - 'curl -X DELETE http://${API_ENDPOINT}/review -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\"}"'

.test_template: &test
  image: alpine
  script:
    - apk --no-cache add curl
    - curl "http://$DOMAIN" | grep -i "Dimension" 

deploy staging:
  stage: Deploy staging
  environment:
    name: staging
    url: http://${EAZYLABS_IP}-${STG_EXTERNAL_PORT}.${EAZYLABS_DOMAIN}

  script:
    - apk --no-cache add curl
    - 'curl -v -X POST http://${API_ENDPOINT}/staging -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${STG_EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}"  2>&1 | grep 200'

test staging:
  stage: Test staging
  <<: *test
  variables:
    DOMAIN: ${EAZYLABS_IP}-${STG_EXTERNAL_PORT}.${EAZYLABS_DOMAIN}

deploy prod:
  stage: Deploy prod
  environment:
    name: prod
    url: http://${EAZYLABS_IP}-${PROD_EXTERNAL_PORT}.${EAZYLABS_DOMAIN}
  only: 
    - main
  script:
    - apk --no-cache add curl
    - 'curl -v -X POST http://${API_ENDPOINT}/prod -H "Content-Type: application/json" -d "{\"your_name\":\"${APP_NAME}\",\"container_image\":\"${CONTAINER_IMAGE}\", \"external_port\":\"${PROD_EXTERNAL_PORT}\", \"internal_port\":\"${INTERNAL_PORT}\"}" 2>&1 | grep 200'

test prod:
  stage: Test prod
  <<: *test
  variables:
    DOMAIN: ${EAZYLABS_IP}-${PROD_EXTERNAL_PORT}.${EAZYLABS_DOMAIN}
  only:
    - main

